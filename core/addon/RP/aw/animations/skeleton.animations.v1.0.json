{
  "format_version": "1.8.0",
  "animations": {
    "animation.humanoid.base_pose.v1.0": {
      "loop": true,
      "bones": {
        "waist": { "rotation": [ "-this", "-this", "-this" ] },
        "head": { "rotation": [ 0.0, "-this", 0.0 ] },
        "rightArm": {
          "position": [ "-5.0 - this", 0.0, "-this" ],
          "rotation": [ "-this", "-this", "-this" ]
        },
        "leftArm": {
          "position": [ "5.0 - this", 0.0, "-this" ],
          "rotation": [ "-this", "-this", "-this" ]
        },
        "rightLeg": { "rotation": [ "-this", "-this", 0.0 ] },
        "leftLeg": { "rotation": [ "-this", "-this", 0.0 ] }
      }
    },
    "animation.humanoid.look_at_target.default.v1.0": {
      "loop": true,
      "bones": {
        "head": { "rotation": [ "query.target_x_rotation", "query.target_y_rotation", 0.0 ] },
        "hat": { "rotation": [ "query.target_x_rotation", "query.target_y_rotation", 0.0 ] }
      }
    },
    "animation.humanoid.look_at_target.gliding.v1.0": {
      "loop": true,
      "bones": {
        "head": { "rotation": [ "-45.0", "query.target_y_rotation", 0.0 ] },
        "hat": { "rotation": [ "-45.0", "query.target_y_rotation", 0.0 ] }
      }
    },
    "animation.humanoid.look_at_target.swimming.v1.0": {
      "loop": true,
      "bones": {
        "head": { "rotation": [ "Math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)", "query.target_y_rotation", 0.0 ] },
        "hat": { "rotation": [ "Math.lerp(query.target_x_rotation, -45.0, variable.SwimAmount)", "query.target_y_rotation", 0.0 ] }
      }
    },

    "animation.humanoid.move.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ "variable.tcos1", 0.0, 0.0 ] },
        "leftArm": { "rotation": [ "variable.tcos0", 0.0, 0.0 ] },
        "rightLeg": { "rotation": [ "variable.tcos0 * 1.4", 0.0, 0.0 ] },
        "leftLeg": { "rotation": [ "variable.tcos1 * 1.4", 0.0, 0.0 ] }
      }
    },

    "animation.humanoid.riding.arms.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ -36.0, 0.0, 0.0 ] },
        "leftArm": { "rotation": [ -36.0, 0.0, 0.0 ] }
      }
    },
    "animation.humanoid.riding.legs.v1.0": {
      "loop": true,
      "override_previous_animation": true,
      "bones": {
        "rightLeg": { "rotation": [ -72.0, 18.0, 0.0 ] },
        "leftLeg": { "rotation": [ -72.0, -18.0, 0.0 ] }
      }
    },

    "animation.humanoid.holding.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ "variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ] },
        "leftArm": { "rotation": [ "variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ] }
      }
    },

    "animation.humanoid.brandish_spear.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ "this * -0.5 - 157.5 - 22.5 * variable.charge_amount", "-this - variable.attack_body_rot_y", 0.0 ] }
      }
    },

    "animation.humanoid.charging.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ "22.5 * variable.charge_amount - this", "-this", 0.0 ] }
      }
    },

    "animation.humanoid.attack.rotations.v1.0": {
      "loop": true,
      "bones": {
        "body": { "rotation": [ 0.0, "variable.attack_body_rot_y - this", 0.0 ] },
        "rightArm": {
          "rotation": [ "Math.sin(1.0 - Math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )", "variable.is_brandishing_spear ? 0.0 : variable.attack_body_rot_y * 2.0", 0.0 ]
        },
        "leftArm": { "rotation": [ "variable.attack_body_rot_y", 0.0, 0.0 ] }
      }
    },

    "animation.humanoid.sneaking.v1.0": {
      "loop": true,
      "bones": {
        "body": { "rotation": [ "0.5 - this", 0.0, 0.0 ] },
        "rightArm": { "rotation": [ 72.0, 0.0, 0.0 ] },
        "leftArm": { "rotation": [ 72.0, 0.0, 0.0 ] },
        "rightLeg": { "position": [ 0.0, -3.0, 4.0 ] },
        "leftLeg": { "position": [ 0.0, -3.0, 4.0 ] },
        "head": { "position": [ 0.0, 1.0, 0.0 ] }
      }
    },

    "animation.humanoid.bob.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ 0.0, 0.0, "(Math.cos(query.life_time * 103.2) * 2.865) + 2.865" ] },
        "leftArm": { "rotation": [ 0.0, 0.0, "-(Math.cos(query.life_time * 103.2) * 2.865) - 2.865" ] },
        "leftLeg": { "rotation": [ "-Math.sin(query.life_time * 76.8) * 2.865", 0.0, 0.0 ] }
      }
    },

    "animation.humanoid.damage_nearby_mobs.v1.0": {
      "loop": true,
      "override_previous_animation": true,
      "bones": {
        "rightArm": { "rotation": [ 45.0, 0.0, 0.0 ] },
        "leftArm": { "rotation": [ -45.0, 0.0, 0.0 ] },
        "rightLeg": { "rotation": [ -45.0, 0.0, 0.0 ] },
        "leftLeg": { "rotation": [ 45.0, 0.0, 0.0 ] }
      }
    },

    "animation.humanoid.bow_and_arrow.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": { "rotation": [ "query.target_x_rotation - 90.0 + Math.sin(query.life_time * 76.8) * 2.865 - this", "query.target_y_rotation - 5.73", "(Math.cos(query.life_time * 103.2) * 2.865) + 2.865" ] },
        "leftArm": { "rotation": [ "query.target_x_rotation - 90.0 - Math.sin(query.life_time * 76.8) * 2.865 - this", "query.target_y_rotation + 28.65", "-(Math.cos(query.life_time * 103.2) * 2.865) - 2.865" ] }
      }
    },

    "animation.humanoid.swimming.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": {
          "rotation": {
            "0.7": {
              "pre": [ "Math.lerp(this, 0.0, variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)", "Math.lerp(this, -0.1019 * (-65.0 * variable.internal_swim_pos + variable.internal_swim_pos * variable.internal_swim_pos), variable.right_arm_swim_amount)" ],
              "post": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.right_arm_swim_amount)" ]
            },
            "1.1": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.right_arm_swim_amount)" ],
            "1.3": {
              "pre": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.right_arm_swim_amount)" ],
              "post": [ "Math.lerp(this, 90.0 - (22.5 * variable.internal_swim_pos), variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)", "Math.lerp(this, 180.0, variable.right_arm_swim_amount)" ]
            }
          }
        },
        "leftArm": {
          "rotation": {
            "0.7": {
              "pre": [ "Math.lerp(this, 0.0, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0 - 0.01877 * (-65.0 * variable.internal_swim_pos + variable.internal_swim_pos * variable.internal_swim_pos), variable.left_arm_swim_amount)" ],
              "post": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.left_arm_swim_amount)" ]
            },
            "1.1": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.left_arm_swim_amount)" ],
            "1.3": {
              "pre": [ "Math.lerp(this, 11.25 * variable.internal_swim_pos, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)", "Math.lerp(this, 72.77 + 13.4 * variable.internal_swim_pos, variable.left_arm_swim_amount)" ],
              "post": [ "Math.lerp(this, 90.0 - (22.5 * variable.internal_swim_pos), variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)", "Math.lerp(this, 180.0, variable.left_arm_swim_amount)" ]
            }
          }
        },
        "rightLeg": {
          "rotation": [ "Math.lerp(this, Math.cos(query.modified_distance_moved * 19.5) * 17.2, variable.left_arm_swim_amount)", 0.0, 0.0 ]
        },
        "leftLeg": {
          "rotation": [ "Math.lerp(this, Math.cos(query.modified_distance_moved * 19.5 + 180.0) * 17.2, variable.left_arm_swim_amount)", 0.0, 0.0 ]
        }
      }
    },

    "animation.humanoid.use_item_progress.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": {
          "rotation": [ "variable.UseItemStartupProgress * -60.0 + variable.UseItemIntervalProgress * 11.25", "variable.UseItemStartupProgress * -22.5 + variable.UseItemIntervalProgress * 11.25", "variable.UseItemStartupProgress * -5.625 + variable.UseItemIntervalProgress * 11.25" ]
        }
      }
    },

    "animation.skeleton.attack.v1.0": {
      "loop": true,
      "bones": {
        "rightArm": {
          "rotation": [ "-68.75 * variable.attack2 + 22.92 * variable.attack", "-5.73 + variable.attack2 * 34.38 - this", "-this" ]
        },
        "leftArm": {
          "rotation": [ "-68.75 * variable.attack2 + 22.92 * variable.attack", "5.73 - variable.attack2 * 34.38 - this", "-this" ]
        }
      }
    }
  }
}
